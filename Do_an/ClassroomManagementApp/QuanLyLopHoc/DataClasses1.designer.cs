#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyLopHoc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyLopHocDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertHOCSINH(HOCSINH instance);
    partial void UpdateHOCSINH(HOCSINH instance);
    partial void DeleteHOCSINH(HOCSINH instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertLICHDAY(LICHDAY instance);
    partial void UpdateLICHDAY(LICHDAY instance);
    partial void DeleteLICHDAY(LICHDAY instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QuanLyLopHoc.Properties.Settings.Default.QuanLyLopHocDBConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCSINH> HOCSINHs
		{
			get
			{
				return this.GetTable<HOCSINH>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<LICHDAY> LICHDAYs
		{
			get
			{
				return this.GetTable<LICHDAY>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _MaMon;
		
		private int _HocKy;
		
		private int _NamHoc;
		
		private System.Nullable<double> _DiemSo;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    partial void OnNamHocChanging(int value);
    partial void OnNamHocChanged();
    partial void OnDiemSoChanging(System.Nullable<double> value);
    partial void OnDiemSoChanged();
    #endregion
		
		public DIEM()
		{
			this._HOCSINH = default(EntityRef<HOCSINH>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemSo", DbType="Float")]
		public System.Nullable<double> DiemSo
		{
			get
			{
				return this._DiemSo;
			}
			set
			{
				if ((this._DiemSo != value))
				{
					this.OnDiemSoChanging(value);
					this.SendPropertyChanging();
					this._DiemSo = value;
					this.SendPropertyChanged("DiemSo");
					this.OnDiemSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_DIEM", Storage="_HOCSINH", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_MONHOC", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private string _GioiTinh;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<LICHDAY> _LICHDAYs;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._LICHDAYs = new EntitySet<LICHDAY>(new Action<LICHDAY>(this.attach_LICHDAYs), new Action<LICHDAY>(this.detach_LICHDAYs));
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_LOPs", ThisKey="MaGV", OtherKey="MaGVCN")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LICHDAY", Storage="_LICHDAYs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<LICHDAY> LICHDAYs
		{
			get
			{
				return this._LICHDAYs;
			}
			set
			{
				this._LICHDAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCSINH")]
	public partial class HOCSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _HoTen;
		
		private System.DateTime _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _MaLop;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    #endregion
		
		public HOCSINH()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_DIEM", Storage="_DIEMs", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private int _NamHoc;
		
		private string _MaGVCN;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
		private EntitySet<LICHDAY> _LICHDAYs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnNamHocChanging(int value);
    partial void OnNamHocChanged();
    partial void OnMaGVCNChanging(string value);
    partial void OnMaGVCNChanged();
    #endregion
		
		public LOP()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			this._LICHDAYs = new EntitySet<LICHDAY>(new Action<LICHDAY>(this.attach_LICHDAYs), new Action<LICHDAY>(this.detach_LICHDAYs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int NOT NULL")]
		public int NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVCN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaGVCN
		{
			get
			{
				return this._MaGVCN;
			}
			set
			{
				if ((this._MaGVCN != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVCNChanging(value);
					this.SendPropertyChanging();
					this._MaGVCN = value;
					this.SendPropertyChanged("MaGVCN");
					this.OnMaGVCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_HOCSINHs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LICHDAY", Storage="_LICHDAYs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<LICHDAY> LICHDAYs
		{
			get
			{
				return this._LICHDAYs;
			}
			set
			{
				this._LICHDAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_PHANCONGs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_GIAOVIEN", ThisKey="MaGVCN", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaGVCN = value.MaGV;
					}
					else
					{
						this._MaGVCN = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHDAY")]
	public partial class LICHDAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _MaLop;
		
		private string _MaMon;
		
		private string _NgayTrongTuan;
		
		private int _TietBatDau;
		
		private System.Nullable<int> _SoTiet;
		
		private int _NamHoc;
		
		private System.Nullable<int> _HocKy;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnNgayTrongTuanChanging(string value);
    partial void OnNgayTrongTuanChanged();
    partial void OnTietBatDauChanging(int value);
    partial void OnTietBatDauChanged();
    partial void OnSoTietChanging(System.Nullable<int> value);
    partial void OnSoTietChanged();
    partial void OnNamHocChanging(int value);
    partial void OnNamHocChanged();
    partial void OnHocKyChanging(System.Nullable<int> value);
    partial void OnHocKyChanged();
    #endregion
		
		public LICHDAY()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTrongTuan", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NgayTrongTuan
		{
			get
			{
				return this._NgayTrongTuan;
			}
			set
			{
				if ((this._NgayTrongTuan != value))
				{
					this.OnNgayTrongTuanChanging(value);
					this.SendPropertyChanging();
					this._NgayTrongTuan = value;
					this.SendPropertyChanged("NgayTrongTuan");
					this.OnNgayTrongTuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietBatDau", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TietBatDau
		{
			get
			{
				return this._TietBatDau;
			}
			set
			{
				if ((this._TietBatDau != value))
				{
					this.OnTietBatDauChanging(value);
					this.SendPropertyChanging();
					this._TietBatDau = value;
					this.SendPropertyChanged("TietBatDau");
					this.OnTietBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTiet", DbType="Int")]
		public System.Nullable<int> SoTiet
		{
			get
			{
				return this._SoTiet;
			}
			set
			{
				if ((this._SoTiet != value))
				{
					this.OnSoTietChanging(value);
					this.SendPropertyChanging();
					this._SoTiet = value;
					this.SendPropertyChanged("SoTiet");
					this.OnSoTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int NOT NULL")]
		public int NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int")]
		public System.Nullable<int> HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LICHDAY", Storage="_GIAOVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.LICHDAYs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.LICHDAYs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LICHDAY", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.LICHDAYs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.LICHDAYs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LICHDAY", Storage="_MONHOC", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.LICHDAYs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.LICHDAYs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<LICHDAY> _LICHDAYs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    #endregion
		
		public MONHOC()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._LICHDAYs = new EntitySet<LICHDAY>(new Action<LICHDAY>(this.attach_LICHDAYs), new Action<LICHDAY>(this.detach_LICHDAYs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_DIEMs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LICHDAY", Storage="_LICHDAYs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<LICHDAY> LICHDAYs
		{
			get
			{
				return this._LICHDAYs;
			}
			set
			{
				this._LICHDAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_LICHDAYs(LICHDAY entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDUser;
		
		private string _Username;
		
		private System.Data.Linq.Binary _Password;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _Level;
		
		private string _MaGV;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_TAIKHOAN", Storage="_GIAOVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _MaMon;
		
		private string _MaLop;
		
		private int _NamHoc;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnNamHocChanging(int value);
    partial void OnNamHocChanged();
    #endregion
		
		public PHANCONG()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOP = default(EntityRef<LOP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int NOT NULL")]
		public int NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_GIAOVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_PHANCONG", Storage="_MONHOC", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
